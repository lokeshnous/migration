<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
			http://www.springframework.org/schema/security 
			http://www.springframework.org/schema/security/spring-security-3.1.xsd">
	<security:http pattern="/resources/**" security="none"/>
	<security:http pattern="/index.jsp" security="none"/>
	<security:http pattern="/search/jobboardSearchesHistory.html" security="none"/>
	<security:http pattern="/healthcarejobs/logo.html" security="none"/>
	<security:http pattern="/healthcarejobs/homeFeaturedEmps.html" security="none"/>
	<security:http pattern="/healthcarejobs/activeJobs.html" security="none"/>
	<security:http pattern="/healthcarejobs/viewImage.html" security="none"/>
	
<security:http pattern="/admin/**" use-expressions="true" auto-config="false" entry-point-ref="adminAuthenticationEntryPoint">
<security:intercept-url pattern="/admin/adminMenu.html"
			access="hasRole('ROLE_MERION_ADMIN')"/>
<security:intercept-url pattern="/admin/login.html"
			access="hasRole('ROLE_MERION_ADMIN')"/>
<security:intercept-url pattern="/admin/editJobPosting.html"
			access="hasRole('ROLE_MERION_ADMIN')"/>
<security:intercept-url pattern="/admin/employer1/jobInventorypopup.html"
			access="hasRole('ROLE_MERION_ADMIN')"/>
<security:intercept-url pattern="/admin/employer1/manageFacilityGroup.html"
			access="hasRole('ROLE_MERION_ADMIN')"/>												
			
<security:custom-filter ref="adminAuthenticationFilter"
			position="FORM_LOGIN_FILTER"/>
			<security:logout logout-success-url="/admin/adminMenu.html" invalidate-session="true" logout-url="/admin/logout.html"/>
</security:http>

<bean id="adminAuthenticationFilter"
		class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"
		p:authenticationManager-ref="adminAuthenticationManager"
		p:authenticationFailureHandler-ref="adminAuthenticationFailureHandler"
		p:authenticationSuccessHandler-ref="adminAuthenticationSuccessHandler"
		p:filterProcessesUrl="/admin/authenticateAdmin.html"/>

<bean id="adminAuthenticationManager"
		class="com.advanceweb.afc.jb.security.AdminAuthenticationManager"/>
		
<bean id="adminAuthenticationSuccessHandler" 
class="com.advanceweb.afc.jb.login.web.controller.AdminLoginManager"/>

<bean id="adminAuthenticationFailureHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler"
		p:defaultFailureUrl="/admin/loginPage.html?error=true"/>
		
<bean id="adminAuthenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint"
		p:loginFormUrl="/admin/loginPage.html"/>
		
	<security:http auto-config="false" use-expressions="true"
		access-denied-page="/healthcarejobs/index.html" entry-point-ref="authenticationEntryPoint">

		<security:intercept-url pattern="/healthcarejobs/index.html"
			access="permitAll" />
		<security:intercept-url pattern="/commonLogin/login.html"
			access="permitAll" />
		<security:intercept-url
			pattern="/jobseekerregistration/saveJobSeekerProfile.html" access="permitAll" />
		<security:intercept-url
			pattern="/jobseekerregistration/createJobSeekerYourInfo.html" access="permitAll" />
		<security:intercept-url
			pattern="/jobseekerregistration/createJobSeekerCreateYrAcct.html"
			access="permitAll" />
		<security:intercept-url pattern="/search/**"
			access="permitAll" />
		<security:intercept-url pattern="/jobSeeker/jobSeekerDashBoard.html"
			access="hasRole('ROLE_JOB_SEEKER')" />
		<!-- <security:intercept-url pattern="/savedSearches/**"
			access="hasRole('ROLE_JOB_SEEKER')" /> -->
		<security:intercept-url pattern="/subscriptions/**"
			access="permitAll" />
		<security:intercept-url pattern="/jobSeekerJobDetail/**"
			access="hasRole('ROLE_JOB_SEEKER')" />
		<security:intercept-url pattern="/jobSeeker/**"
			access="hasRole('ROLE_JOB_SEEKER')" />
		<security:intercept-url pattern="/jobSeekerResume/**"
			access="hasRole('ROLE_JOB_SEEKER')" />
		<security:intercept-url pattern="/savedSearches/**"
			access="permitAll"/>

		<!-- Added for SSL Implementation -start -->
		<security:intercept-url pattern="/pgiController/**"
			access="permitAll" requires-channel="https" />
		<security:intercept-url pattern="/employer/employerDashBoard.html"
			access="permitAll" requires-channel="http" />
		<security:intercept-url pattern="/logout.html"
			access="permitAll" requires-channel="http" />
		<!-- Added for SSL Implementation -end -->

		<!-- Added for SSL Implementation : Server.xml : Connector port and Security: 
			port must be same. for example server.xml <Connector port="2815" protocol="HTTP/1.1" 
			connectionTimeout="20000" redirectPort="8443" /> spring-security.xml <security:port-mapping 
			http="2815" https="8443" /> -start -->
		<!-- <security:port-mappings>
			<security:port-mapping http="2815" https="8443" />
		</security:port-mappings> -->
		<!-- Added for SSL Implementation -end -->

		<security:logout success-handler-ref="customLogoutSuccessHandler"
			invalidate-session="false" logout-url="/logout.html" />
		<security:custom-filter ref="authenticationFilter"
			position="FORM_LOGIN_FILTER" />
		<security:custom-filter ref="rememberMeProcessingFilter"
			position="REMEMBER_ME_FILTER" />
			<security:custom-filter ref="preAuthFilter"
			position="PRE_AUTH_FILTER" />
	</security:http>

<bean id="preAuthenticationProvider"
    class="org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider" p:preAuthenticatedUserDetailsService-ref="customAuthenticationManager"/>
<bean id="preAuthFilter"
    class="com.advanceweb.afc.jb.login.web.controller.PreAuthenticationManager" p:authenticationManager-ref="theauthenticationManager"/>

	<bean id="authenticationFilter"
		class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"
		p:authenticationManager-ref="theauthenticationManager"
		p:authenticationSuccessHandler-ref="customAuthenticationSuccessHandler"
		p:authenticationFailureHandler-ref="customAuthenticationFailureHandler"
		p:rememberMeServices-ref="rememberMeServices" />

	<bean id="rememberMeProcessingFilter"
		class="org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter"
		p:rememberMeServices-ref="rememberMeServices"
		p:authenticationManager-ref="theauthenticationManager"
		p:authenticationSuccessHandler-ref="customAuthenticationSuccessHandler" />
	
	<bean id="customAuthenticationManager"
		class="com.advanceweb.afc.jb.security.DatabaseAuthenticationManager" p:userDetailsService-ref="customAuthenticationManager"/>

	<bean id="customAuthenticationFailureHandler"
		class="com.advanceweb.afc.jb.login.web.controller.LoginFailureManager"/>

	<bean id="customAuthenticationSuccessHandler" class="com.advanceweb.afc.jb.login.web.controller.LoginManager"/>

	<bean id="customLogoutSuccessHandler"
		class="com.advanceweb.afc.jb.login.web.controller.LogoutManager"/>

	<bean id="authenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint"
		p:loginFormUrl="/healthcarejobs/index.html"/>

	<bean id="rememberMeServices"
		class="org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices">
		<property name="userDetailsService" ref="customAuthenticationManager" />
		<property name="key" value="mmjbRememberMeKey" />
	</bean>

	<bean id="rememberMeAuthenticationProvider"
		class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
		<property name="key" value="mmjbRememberMeKey" />
	</bean>
	<bean id="daoAuthenticationProvider"
		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="customAuthenticationManager" />
	</bean>
	<security:authentication-manager alias="theauthenticationManager">
	<security:authentication-provider ref="customAuthenticationManager" />
	
	<security:authentication-provider ref="preAuthenticationProvider" />
		<security:authentication-provider
			ref="rememberMeAuthenticationProvider" />
		<!-- <security:authentication-provider
			ref="daoAuthenticationProvider" /> -->
	</security:authentication-manager>

</beans>
 